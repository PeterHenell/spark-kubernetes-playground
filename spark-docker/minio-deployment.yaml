apiVersion: apps/v1
kind: DaemonSet

metadata:
  name: monsun-minio
  labels:
    app: monsun-minio

spec:
  selector:
    matchLabels:
      app: monsun-minio
  template:
    metadata:
      labels:
        app: monsun-minio
    spec:
      # We only deploy minio to nodes specified as a minio server. 
      # The label is applied to nodes using `kubectl label node hostname1 -l minio-server=true`
      nodeSelector:
        minio-server: "true"
      hostNetwork: true
      
      # The storage is provided using a hostPath, which must be the same on all servers.
      volumes:
      - name: storage
        hostPath:
          path: /ext/storage/object-storage/

      containers:
      - name: minio
        env:
        - name: MINIO_ACCESS_KEY
          value: "minio-access-key"
        - name: MINIO_SECRET_KEY
          value: "minio-secret-long-and-random"
        
        image: minio/minio:RELEASE.2019-10-12T01-39-57Z
        
        # Servers must be manually defined.
        args:
        - server
        - http://storage{1...4}.example.com/data/minio
        
        ports:
        - containerPort: 9000
        
        volumeMounts:
        - name: storage
          mountPath: /data/minio/
---
apiVersion: v1
kind: Service
metadata:
  name: object-storage
  namespace: monsun
spec:
  ports:
    - port: 443
      targetPort: 9000
      protocol: TCP
  selector:
    # Looks for labels `app:minio` in the namespace and applies the spec
    app: monsun-minio