# Dependencies Container Image
# Install wget to retrieve Spark runtime components,
# extract to temporary directory, copy to the desired image
FROM ubuntu:18.04 AS deps

RUN apt-get update && apt-get -y install wget
WORKDIR /tmp
RUN wget https://ftp.acc.umu.se/mirror/apache.org/spark/spark-3.1.2/spark-3.1.2-bin-without-hadoop.tgz \
	&& tar zxvf spark-3.1.2-bin-without-hadoop.tgz
RUN wget https://archive.apache.org/dist/hadoop/common/hadoop-3.2.0/hadoop-3.2.0.tar.gz \
  && tar xvzf hadoop-3.2.0.tar.gz
RUN wget https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-azure/3.2.0/hadoop-azure-3.2.0.jar
RUN wget https://repo1.maven.org/maven2/com/microsoft/azure/azure-storage/8.6.6/azure-storage-8.6.6.jar
RUN wget https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-aws/3.2.0/hadoop-aws-3.2.0.jar
RUN wget https://repo1.maven.org/maven2/com/amazonaws/aws-java-sdk-bundle/1.11.1032/aws-java-sdk-bundle-1.11.1032.jar

# Runtime Container Image. Adapted from the official Spark runtime 
# image from the project repository at https://github.com/apache/spark.
FROM openjdk:8-jdk-slim AS build

# Install Spark Dependencies and Prepare Spark Runtime Environment
RUN set -ex && \
    apt-get update && \
    ln -s /lib /lib64 && \
    apt install -y bash tini libc6 libpam-modules libnss3 wget python3 python3-pip && \
    mkdir -p /opt/hadoop && \
    mkdir -p /opt/spark && \
    mkdir -p /opt/spark/examples && \
    mkdir -p /opt/spark/work-dir && \
    touch /opt/spark/RELEASE && \
    rm /bin/sh && \
    ln -sv /bin/bash /bin/sh && \
    ln -sv /usr/bin/tini /sbin/tini && \
    echo "auth required pam_wheel.so use_uid" >> /etc/pam.d/su && \
    chgrp root /etc/passwd && chmod ug+rw /etc/passwd && \
    ln -sv /usr/bin/python3 /usr/bin/python && \
    ln -sv /usr/bin/pip3 /usr/bin/pip \
    rm -rf /var/cache/apt/*

# Install Kerberos Client and Auth Components
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update \
  && apt install -yqq krb5-user \
  && rm -rf /var/cache/apt/*

# Hadoop: Copy previously fetched runtime components
COPY --from=deps /tmp/hadoop-3.2.0/bin /opt/hadoop/bin
COPY --from=deps /tmp/hadoop-3.2.0/etc /opt/hadoop/etc
COPY --from=deps /tmp/hadoop-3.2.0/include /opt/hadoop/include
COPY --from=deps /tmp/hadoop-3.2.0/lib /opt/hadoop/lib
COPY --from=deps /tmp/hadoop-3.2.0/libexec /opt/hadoop/libexec
COPY --from=deps /tmp/hadoop-3.2.0/sbin /opt/hadoop/sbin
COPY --from=deps /tmp/hadoop-3.2.0/share /opt/hadoop/share

# Spark: Copy previously fetched runtime components
COPY --from=deps /tmp/spark-3.1.2-bin-without-hadoop/bin /opt/spark/bin
COPY --from=deps /tmp/spark-3.1.2-bin-without-hadoop/jars /opt/spark/jars
COPY --from=deps /tmp/spark-3.1.2-bin-without-hadoop/python /opt/spark/python
COPY --from=deps /tmp/spark-3.1.2-bin-without-hadoop/R /opt/spark/R
COPY --from=deps /tmp/spark-3.1.2-bin-without-hadoop/sbin /opt/spark/sbin
COPY --from=deps /tmp/spark-3.1.2-bin-without-hadoop/yarn /opt/spark/yarn

# Add jar for accessing Azure
COPY --from=deps /tmp/hadoop-azure-3.2.0.jar /opt/spark/jars/hadoop-azure-3.2.0.jar
COPY --from=deps /tmp/azure-storage-8.6.6.jar /opt/spark/jars/azure-storage-8.6.6.jar

# Add jars for accessing s3
COPY --from=deps /tmp/hadoop-aws-3.2.0.jar /opt/spark/jars/hadoop-aws-3.2.0.jar 
COPY --from=deps /tmp/aws-java-sdk-bundle-1.11.1032.jar /opt/spark/jars/aws-java-sdk-bundle-1.11.1032.jar


# Spark: Copy Docker entry script
COPY --from=deps /tmp/spark-3.1.2-bin-without-hadoop/kubernetes/dockerfiles/spark/entrypoint.sh /opt/

# Spark: Copy examples, data, and tests
COPY --from=deps /tmp/spark-3.1.2-bin-without-hadoop/examples /opt/spark/examples
COPY --from=deps /tmp/spark-3.1.2-bin-without-hadoop/data /opt/spark/data
COPY --from=deps /tmp/spark-3.1.2-bin-without-hadoop/kubernetes/tests /opt/spark/tests

# Set Hadoop environment
ENV HADOOP_HOME /opt/hadoop
ENV LD_LIBRARY_PATH $HADOOP_HOME/lib/native

# Set Spark environment
ENV SPARK_HOME /opt/spark
ENV PATH $PATH:$SPARK_HOME/bin:$HADOOP_HOME/bin
ENV SPARK_DIST_CLASSPATH /opt/hadoop/etc/hadoop:/opt/hadoop/share/hadoop/common/lib/*:/opt/hadoop/share/hadoop/common/*:/opt/hadoop/share/hadoop/hdfs:/opt/hadoop/share/hadoop/hdfs/lib/*:/opt/hadoop/share/hadoop/hdfs/*:/opt/hadoop/share/hadoop/mapreduce/lib/*:/opt/hadoop/share/hadoop/mapreduce/*:/opt/hadoop/share/hadoop/yarn:/opt/hadoop/share/hadoop/yarn/lib/*:/opt/hadoop/share/hadoop/yarn/*
ENV SPARK_CLASSPATH /opt/spark/jars/*:$SPARK_DIST_CLASSPATH

WORKDIR /opt/spark/work-dir
RUN chmod g+w /opt/spark/work-dir

ENTRYPOINT [ "/opt/entrypoint.sh" ]

# Specify the User that the actual main process will run as
USER ${spark_uid}